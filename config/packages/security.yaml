security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [in_memory, fos_userbundle]
        in_memory:
            memory:
                users:
                    admin:
                        password: $2y$12$1sZXPUAuyLv5PSWigKfjMOtczuaB.nNG7Kou5st6blZ2UB9KBtpy6
                        roles: ['ROLE_ADMIN']
        fos_userbundle:
            id: fos_user.user_provider.username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_login:
            pattern:  ^/api/auth/login
            provider: chain_provider
            stateless: true
            anonymous: true
            json_login:
                provider: chain_provider
                check_path:               /api/auth/login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api_register:
            pattern:  ^/api/user/register
            stateless: true
            anonymous: true

        api_docs:
            pattern:  ^/api/doc([s]?).*
            stateless: true
            anonymous: true

        api_docs_graphql:
            pattern:  ^/api/graphql
            stateless: true
            anonymous: true

        api_docs_redoc:
            pattern:  ^/api?ui=re_doc
            stateless: true
            anonymous: true

        api:
            pattern: ^/api
            stateless: true
            anonymous: true
#            provider: chain_provider
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            pattern: ^/
            logout:
                path:   fos_user_security_logout
                target: fos_user_security_login
            anonymous:    true


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    role_hierarchy:
        ROLE_ADMIN:         ROLE_USER
        ROLE_SUPER_ADMIN:   ROLE_ADMIN
    access_control:
#        - { path: ^/api/, roles: ROLE_API }
#        - { path: ^/admin/, roles: ROLE_ADMIN }
        - { path: ^/api/auth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/user/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/graphql, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt
        Symfony\Component\Security\Core\User\User: plaintext
